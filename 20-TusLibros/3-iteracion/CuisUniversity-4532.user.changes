

----STARTUP---- (17 June 2021 20:39:43) as /Users/ecerdeira/Desktop/ST limpio/CuisUniversity-4532.image!


!classRemoval: #TestObjectFactory stamp: 'ENC 6/17/2021 20:39:58'!
Object subclass: #TestObjectFactory
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #MPInnerInterfaceSimulatorValidCard stamp: 'ENC 6/17/2021 20:39:58'!
MPInnerInterfaceSimulator subclass: #MPInnerInterfaceSimulatorValidCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #MPInnerInterfaceSimulatorStolenCard stamp: 'ENC 6/17/2021 20:39:58'!
MPInnerInterfaceSimulator subclass: #MPInnerInterfaceSimulatorStolenCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #MPInnerInterfaceSimulatorInsufficientAmountCard stamp: 'ENC 6/17/2021 20:39:58'!
MPInnerInterfaceSimulator subclass: #MPInnerInterfaceSimulatorInsufficientAmountCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #MPInnerInterfaceSimulatorFalseCard stamp: 'ENC 6/17/2021 20:39:58'!
MPInnerInterfaceSimulator subclass: #MPInnerInterfaceSimulatorFalseCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #MPInnerInterfaceSimulator stamp: 'ENC 6/17/2021 20:39:58'!
Object subclass: #MPInnerInterfaceSimulator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'ENC 6/17/2021 20:39:59'!
Object subclass: #CreditCard
	instanceVariableNames: 'owner number date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ENC 6/17/2021 20:39:59'!
Object subclass: #Cashier
	instanceVariableNames: 'merchantProcessorInterface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ENC 6/17/2021 20:39:59'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ENC 6/17/2021 20:39:59'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testingObjectFactory date mpInnerInterfaceSimulatorValidCard mpInnerInterfaceSimulatorFalseCard mpInnerInterfaceSimulatorStolenCard mpInnerInterfaceSimulatorInsufficientAmountCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ENC 6/17/2021 20:39:59'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testingObjectFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of /Users/ecerdeira/Desktop/TusLibros-33.st----!

TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterfaceTest category: 'TusLibros' stamp: 'ENC 6/17/2021 20:41:45'!
TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #InnerUserInterface
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'ENC 6/17/2021 20:41:55'!
Object subclass: #InnerUserInterface
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ENC 6/17/2021 20:42:13'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ENC 6/17/2021 20:42:13'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ENC 6/17/2021 20:42:13'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ENC 6/17/2021 20:42:13'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ENC 6/17/2021 20:42:13'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ENC 6/17/2021 20:42:13'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ENC 6/17/2021 20:42:14'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ENC 6/17/2021 20:42:14'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ENC 6/17/2021 20:42:14'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ENC 6/17/2021 20:42:14'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ENC 6/17/2021 20:42:14'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ENC 6/17/2021 20:42:14'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ENC 6/17/2021 20:42:14'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ENC 6/17/2021 20:42:14'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 20:46:57'!
test01cannotCreateACartWithInvalidUser

	| interface userID userPassword |

	interface := InnerUserInterface new.
	userID := 'invalidUser'.
	userPassword := '123'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: InnerUserInterface errorInvalidUsernameOrPassword.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:47:04'!
ERROR!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:47:13'!
ERROR!
!InnerUserInterface class methodsFor: 'error description' stamp: 'ENC 6/17/2021 20:47:37'!
errorInvalidUsernameOrPassword
	self shouldBeImplemented.! !
!InnerUserInterface class methodsFor: 'error description' stamp: 'ENC 6/17/2021 20:48:02' prior: 50924074!
errorInvalidUsernameOrPassword
	
	^ 'El usuario o contraseña ingresados son inválidos'.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:48:03'!
FAILURE!
!InnerUserInterfaceTest methodsFor: 'assertions' stamp: 'ENC 6/17/2021 20:48:24' overrides: 16927375!
assert: aFalse description: aBlockClosure 
	self shouldBeImplemented.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'ENC 6/17/2021 20:49:29'!
createCartForUser: userID withPassword: userPassword

	self signalInvalidUsernameOrPassword.! !
!InnerUserInterface methodsFor: 'signaling' stamp: 'ENC 6/17/2021 20:50:14'!
invalidUsernameOrPassword

	self error: self class errorInvalidUsernameOrPassword ! !
!InnerUserInterface methodsFor: 'signaling' stamp: 'ENC 6/17/2021 20:50:39'!
signalInvalidUsernameOrPassword

	self error: self class errorInvalidUsernameOrPassword ! !

!methodRemoval: InnerUserInterface #invalidUsernameOrPassword stamp: 'ENC 6/17/2021 20:50:41'!
invalidUsernameOrPassword

	self error: self class errorInvalidUsernameOrPassword !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:51:03'!
ERROR!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:51:03'!
ERROR!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:51:53'!
ERROR!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:54:25'!
ERROR!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:54:25'!
ERROR!
!InnerUserInterface methodsFor: 'signaling' stamp: 'ENC 6/17/2021 20:55:13' prior: 50924107!
signalInvalidUsernameOrPassword

	self error: self class errorInvalidUsernameOrPassword ! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:58:49'!
ERROR!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:58:49'!
ERROR!
!InnerUserInterface methodsFor: 'signaling' stamp: 'ENC 6/17/2021 20:59:15' prior: 50924137!
signalInvalidUsernameOrPassword

	self error: self class errorInvalidUsernameOrPassword ! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'ENC 6/17/2021 20:59:23' overrides: 16896425!
initialize! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 20:59:39' prior: 50924053!
test01cannotCreateACartWithInvalidUser

	| interface userID userPassword |

	interface := InnerUserInterface new.
	userID := 'invalidUser'.
	userPassword := '123'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: InnerUserInterface errorInvalidUsernameOrPassword.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 20:59:42'!
ERROR!

InnerUserInterface errorInvalidUsernameOrPassword!

self class errorInvalidUsernameOrPassword !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 21:01:05'!
ERROR!
!InnerUserInterface methodsFor: 'cart' stamp: 'ENC 6/17/2021 21:01:27' prior: 50924095!
createCartForUser: userID withPassword: userPassword

	self error: self class errorInvalidUsernameOrPassword .! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 21:01:30'!
ERROR!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 21:01:30'!
ERROR!

!methodRemoval: InnerUserInterfaceTest #assert:description: stamp: 'ENC 6/17/2021 21:01:58'!
assert: aFalse description: aBlockClosure 
	self shouldBeImplemented.!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 21:02:05'!
PASSED!
!InnerUserInterface methodsFor: 'cart' stamp: 'ENC 6/17/2021 21:02:14' prior: 50924185!
createCartForUser: userID withPassword: userPassword

	self signalInvalidUsernameOrPassword.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 21:02:18'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:05:37'!
test02cannotCreateACartWithInvalidPassword

	| interface userID userPassword |

	interface := InnerUserInterface new.
	userID := 'validUser'.
	userPassword := 'invalidPassword'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: InnerUserInterface errorInvalidUsernameOrPassword.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:05:47' prior: 50924161!
test01cannotCreateACartWithInvalidUser

	| interface userID userPassword |

	interface := InnerUserInterface new.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: InnerUserInterface errorInvalidUsernameOrPassword.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:06:40'!
test03createdCartIsEmpty

	| interface userID userPassword cartID |

	interface := InnerUserInterface new.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:08:03' prior: 50924246!
test03createdCartIsEmpty

	| interface userID userPassword cartID |

	interface := InnerUserInterface new.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID isEmpty).! !
!InnerUserInterface class methodsFor: 'instance creation' stamp: 'ENC 6/17/2021 21:13:19'!
with: aCredentialValidator

	^ self new initializeWith: aCredentialValidator.! !

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'ENC 6/17/2021 21:13:46'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'initialization' stamp: 'ENC 6/17/2021 21:13:44'!
initializeWith: aCredentialValidator

	credentialValidator := aCredentialValidator.! !

!methodRemoval: InnerUserInterface #initialize stamp: 'ENC 6/17/2021 21:13:51'!
initialize!

!testRun: #InnerUserInterfaceTest #test02cannotCreateACartWithInvalidPassword stamp: 'ENC 6/17/2021 21:14:06'!
PASSED!

Object subclass: #CredentialValidator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CredentialValidator category: 'TusLibros' stamp: 'ENC 6/17/2021 21:14:38'!
Object subclass: #CredentialValidator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRenamed: #CredentialValidator as: #CredentialValidatorSimulator stamp: 'ENC 6/17/2021 21:15:01'!
Smalltalk renameClassNamed: #CredentialValidator as: #CredentialValidatorSimulator!
!CredentialValidatorSimulator methodsFor: 'validate' stamp: 'ENC 6/17/2021 21:15:51'!
logWith: aUsername and: aPassword

	self subclassResponsibility ! !

CredentialValidatorSimulator subclass: #CredentialValidatorSimulatorInvalidCredentials
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CredentialValidatorSimulatorInvalidCredentials category: 'TusLibros' stamp: 'ENC 6/17/2021 21:16:21'!
CredentialValidatorSimulator subclass: #CredentialValidatorSimulatorInvalidCredentials
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

CredentialValidatorSimulator subclass: #CredentialValidatorSimulatorValidCredentials
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CredentialValidatorSimulatorValidCredentials category: 'TusLibros' stamp: 'ENC 6/17/2021 21:16:26'!
CredentialValidatorSimulator subclass: #CredentialValidatorSimulatorValidCredentials
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CredentialValidatorSimulatorInvalidCredentials methodsFor: 'log' stamp: 'ENC 6/17/2021 21:17:30' overrides: 50924313!
logWith: aUsername and: aPassword

	self error: self class errorInvalidUsernameOrPassword ! !
!CredentialValidatorSimulatorValidCredentials methodsFor: 'log' stamp: 'ENC 6/17/2021 21:17:56'!
logWith: aUsername with: aPassword

	! !
!CredentialValidatorSimulator class methodsFor: 'error description' stamp: 'ENC 6/17/2021 21:18:38'!
errorInvalidUsernameOrPassword

	^ ''! !
!CredentialValidatorSimulator class methodsFor: 'error description' stamp: 'ENC 6/17/2021 21:18:49' prior: 50924361!
errorInvalidUsernameOrPassword

	^ 'El usuario o contraseña ingresados son inválidos'! !

!methodRemoval: InnerUserInterface class #errorInvalidUsernameOrPassword stamp: 'ENC 6/17/2021 21:18:55'!
errorInvalidUsernameOrPassword
	
	^ 'El usuario o contraseña ingresados son inválidos'.!

!methodRemoval: InnerUserInterface #signalInvalidUsernameOrPassword stamp: 'ENC 6/17/2021 21:19:01'!
signalInvalidUsernameOrPassword

	self error: self class errorInvalidUsernameOrPassword !
!InnerUserInterface methodsFor: 'cart' stamp: 'ENC 6/17/2021 21:19:33' prior: 50924208!
createCartForUser: userID withPassword: userPassword

	credentialValidator logWith: userID and: userPassword.! !
!CredentialValidatorSimulatorValidCredentials methodsFor: 'log' stamp: 'ENC 6/17/2021 21:19:45' overrides: 50924313!
logWith: aUsername and: aPassword

	! !

!methodRemoval: CredentialValidatorSimulatorValidCredentials #logWith:with: stamp: 'ENC 6/17/2021 21:19:45'!
logWith: aUsername with: aPassword

	!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 21:19:51'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02cannotCreateACartWithInvalidPassword stamp: 'ENC 6/17/2021 21:19:51'!
ERROR!

!testRun: #InnerUserInterfaceTest #test03createdCartIsEmpty stamp: 'ENC 6/17/2021 21:19:51'!
ERROR!

!classDefinition: #InnerUserInterfaceTest category: 'TusLibros' stamp: 'ENC 6/17/2021 21:21:32'!
TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: 'credentialValidatorValid'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterfaceTest category: 'TusLibros' stamp: 'ENC 6/17/2021 21:21:33'!
TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: 'credentialValidatorValid credentialValidatorInvalid'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:21:31' overrides: 16927572!
setUp

	credentialValidatorValid := CredentialValidatorSimulatorValidCredentials new.
	credentialValidatorInvalid := CredentialValidatorSimulatorInvalidCredentials new.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:22:18' prior: 50924232!
test01cannotCreateACartWithInvalidUser

	| interface userID userPassword |

	interface := InnerUserInterface with: credentialValidatorInvalid.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !

!methodRemoval: InnerUserInterfaceTest #test02cannotCreateACartWithInvalidPassword stamp: 'ENC 6/17/2021 21:22:21'!
test02cannotCreateACartWithInvalidPassword

	| interface userID userPassword |

	interface := InnerUserInterface new.
	userID := 'validUser'.
	userPassword := 'invalidPassword'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: InnerUserInterface errorInvalidUsernameOrPassword.!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:22:30'!
test01cannotCreateACartWithInvalidCredentials

	| interface userID userPassword |

	interface := InnerUserInterface with: credentialValidatorInvalid.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !

!methodRemoval: InnerUserInterfaceTest #test01cannotCreateACartWithInvalidUser stamp: 'ENC 6/17/2021 21:22:32'!
test01cannotCreateACartWithInvalidUser

	| interface userID userPassword |

	interface := InnerUserInterface with: credentialValidatorInvalid.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:22:37'!
test02createdCartIsEmpty

	| interface userID userPassword cartID |

	interface := InnerUserInterface new.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID isEmpty).! !

!methodRemoval: InnerUserInterfaceTest #test03createdCartIsEmpty stamp: 'ENC 6/17/2021 21:22:37'!
test03createdCartIsEmpty

	| interface userID userPassword cartID |

	interface := InnerUserInterface new.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID isEmpty).!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:23:16'!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID |

	interface := InnerUserInterface new.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID isEmpty).! !

!methodRemoval: InnerUserInterfaceTest #test02createdCartIsEmpty stamp: 'ENC 6/17/2021 21:23:17'!
test02createdCartIsEmpty

	| interface userID userPassword cartID |

	interface := InnerUserInterface new.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID isEmpty).!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'ENC 6/17/2021 21:23:43'!
PASSED!
!InnerUserInterface methodsFor: 'cart' stamp: 'ENC 6/17/2021 21:24:07'!
listCart: aCartID

	^ OrderedCollection new.! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'ENC 6/17/2021 21:24:15'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'ENC 6/17/2021 21:24:15'!
ERROR!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:24:31' prior: 50924524!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID |

	interface := InnerUserInterface with: credentialValidatorValid.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID isEmpty).! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'ENC 6/17/2021 21:25:43'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'ENC 6/17/2021 21:25:43'!
ERROR!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'ENC 6/17/2021 21:25:59' prior: 50924566!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID |

	interface := InnerUserInterface with: credentialValidatorValid.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID) isEmpty.! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'ENC 6/17/2021 21:26:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'ENC 6/17/2021 21:26:02'!
PASSED!

----QUIT----(17 June 2021 21:45:53) CuisUniversity-4532.image priorSource: 18934146!

----STARTUP---- (19 June 2021 22:36:10) as C:\Program Files (x86)\Smalltalk\windows64\CuisUniversity-4532.image!


!classRemoval: #Carrito stamp: 'MS 6/19/2021 22:36:19'!
Object subclass: #Carrito
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #TestCarrito stamp: 'MS 6/19/2021 22:36:19'!
TestCase subclass: #TestCarrito
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Program Files (x86)\Smalltalk\windows64\TusLibros.st----!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 22:38:09'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 22:38:11'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 22:44:27'!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID |

	interface := InnerUserInterface with: credentialValidatorValid.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID) isEmpty.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 22:45:54' prior: 50862901!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID amount isbn |

	interface := InnerUserInterface with: credentialValidatorValid.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	interface add: amount of: isbn toCart: cartID.
	
	self assert: (interface listCart: cartID) isEmpty.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 22:46:25' prior: 50862915!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn |

	interface := InnerUserInterface with: credentialValidatorValid.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: (interface listCart: cartID) includes: isbn.
	! !

!classDefinition: #InnerUserInterfaceTest category: 'TusLibros' stamp: 'MS 6/19/2021 22:46:53'!
TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: 'credentialValidatorValid credentialValidatorInvalid testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 22:46:51' prior: 50862434 overrides: 16927572!
setUp

	credentialValidatorValid := CredentialValidatorSimulatorValidCredentials new.
	credentialValidatorInvalid := CredentialValidatorSimulatorInvalidCredentials new.
	testObjectsFactory := StoreTestObjectsFactory new.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 22:47:51' prior: 50862931!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn |

	interface := InnerUserInterface with: credentialValidatorValid.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: (interface listCart: cartID) includes: isbn.
	! !
!InnerUserInterface methodsFor: 'nil' stamp: 'MS 6/19/2021 22:48:27'!
add: amountOfItems of: item toCart: cartID
	! !

Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/19/2021 22:50:02'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/19/2021 22:56:29'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 22:56:27' prior: 50862769!
createCartForUser: userID withPassword: userPassword

	credentialValidator logWith: userID and: userPassword.
	
	Cart acceptingItemsOf: catalog.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 22:57:37' prior: 50863009!
createCartForUser: userID withPassword: userPassword

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts ! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 22:58:54' prior: 50863017!
createCartForUser: userID withPassword: userPassword

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 22:59:28' prior: 50863027!
createCartForUser: userID withPassword: userPassword

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: cart.
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 22:59:48' prior: 50863037!
createCartForUser: userID withPassword: userPassword

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: cart.
	
	^ cartID
	
	! !
!InnerUserInterface class methodsFor: 'instance creation' stamp: 'MS 6/19/2021 23:15:40'!
with: aCredentialValidator acceptingItemsOf: aCatalog

	^ self new initializeWith: aCredentialValidator acceptingItemsOf: aCatalog.! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/19/2021 23:16:02'!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/19/2021 23:16:06' prior: 50863066!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/19/2021 23:16:13' prior: 50863073!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.! !

!methodRemoval: InnerUserInterface #initializeWith: stamp: 'MS 6/19/2021 23:16:21'!
initializeWith: aCredentialValidator

	credentialValidator := aCredentialValidator.!

!methodRemoval: InnerUserInterface class #with: stamp: 'MS 6/19/2021 23:16:25'!
with: aCredentialValidator

	^ self new initializeWith: aCredentialValidator.!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:17:25' prior: 50862442!
test01cannotCreateACartWithInvalidCredentials

	| interface userID userPassword aCatalog catalog |

	catalog := testObjectsFactory defaultCatalog.
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:17:27' prior: 50863100!
test01cannotCreateACartWithInvalidCredentials

	| interface userID userPassword catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword ] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:17:39' prior: 50862457!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID) isEmpty.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:17:48' prior: 50862967!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: (interface listCart: cartID) includes: isbn.
	! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:18:06'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:18:08'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:18:08'!
ERROR!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:18:21' prior: 50863136!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self assert: (interface listCart: cartID) isEmpty.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:18:25' prior: 50863153!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: (interface listCart: cartID) includes: isbn.
	! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:18:26'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:18:26'!
ERROR!
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/19/2021 23:18:52'!
generateCartID
	! !

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/19/2021 23:19:24'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/19/2021 23:19:24' prior: 50863228!
generateCartID
	lastId := lastId + 1.
	
	^ lastId.! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/19/2021 23:19:34' prior: 50863081!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.
	lastId := 0.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:19:50'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:19:50'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:19:50'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:19:50'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:19:53'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:19:55'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:19:55'!
FAILURE!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:20:26' prior: 50862775!
listCart: aCartID

	^ carts at: aCartID.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:20:28'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:20:28'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:20:28'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:20:28'!
FAILURE!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:21:41' prior: 50862983!
add: amountOfItems of: item toCart: cartID
	
	| cart |
	cart := carts at: cartID.
	
	cart add: amountOfItems of: item.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:21:45' prior: 50863298!
add: amountOfItems of: item toCart: cartID
	
	| cart |
	
	cart := carts at: cartID.
	
	cart add: amountOfItems of: item.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:21:48'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:21:48'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:21:48'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:21:51'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:21:51'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:21:51'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:21:59'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:23:56' prior: 50863201!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: (interface listCart: cartID) size equals: 1.
	self assert: (interface listCart: cartID) includes: isbn.
	! !

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:23:59'!
ERROR!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:23:59'!
ERROR!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:24:14' prior: 50863338!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: ((interface listCart: cartID) size) equals: 1.
	self assert: (interface listCart: cartID) includes: isbn.
	! !

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:24:15'!
ERROR!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:24:21'!
ERROR!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:24:21'!
ERROR!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:28:15' prior: 50863279!
listCart: aCartID

	^ (carts at: aCartID) items.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:28:48' prior: 50863398!
listCart: aCartID

	^ (carts at: aCartID) listItems.! !
!Cart methodsFor: 'nil' stamp: 'MS 6/19/2021 23:29:10'!
listItems
	^items copy.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:29:42'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:29:42'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:29:42'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:29:52'!
test04addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: ((interface listCart: cartID) size) equals: 1.
	self assert: (interface listCart: cartID) includes: isbn.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:36:28'!
test04cannotAddItemsToInvalidCart

	| interface userID userPassword cartID isbn catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: ((interface listCart: cartID) size) equals: 1.
	self assert: (interface listCart: cartID) includes: isbn.
	! !

!methodRemoval: InnerUserInterfaceTest #test04addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:36:28'!
test04addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: ((interface listCart: cartID) size) equals: 1.
	self assert: (interface listCart: cartID) includes: isbn.
	!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:36:46' prior: 50863443!
test04cannotAddItemsToInvalidCart

	| interface userID userPassword cartID isbn catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	
	interface add: 1 of: isbn toCart: cartID.

	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:36:55' prior: 50863486!
test04cannotAddItemsToInvalidCart

	| interface userID userPassword cartID catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	
	interface add: 1 of: 'isbn' toCart: cartID.

	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:37:58' prior: 50863502!
test04cannotAddItemsToInvalidCart

	| interface userID userPassword cartID catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	self should: [interface add: 1 of: 'isbn' toCart: cartID]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterface class methodsFor: 'error description' stamp: 'MS 6/19/2021 23:38:43'!
invalidCartId
	^ 'El Id no corresponde a un carrito válido.'! !
!InnerUserInterface methodsFor: 'signaling' stamp: 'MS 6/19/2021 23:39:16'!
signalInvalidCartId
	^ self error: self class invalidCartId .! !
!InnerUserInterface methodsFor: 'signaling' stamp: 'MS 6/19/2021 23:39:18' prior: 50863542!
signalInvalidCartId
	^ self error: self class invalidCartId.! !

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:39:20'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:39:21'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:39:40'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:39:40'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:39:40'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:39:40'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:39:40'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:39:44'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:39:44'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:39:44'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:39:44'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:39:44'!
FAILURE!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:40:45' prior: 50863305!
add: amountOfItems of: item toCart: cartID
	
	| cart |
	
	(carts includesKey: cartID) ifFalse: [^ self signalInvalidCartId ].
	
	cart := carts at: cartID.
	cart add: amountOfItems of: item.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:40:47'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:40:47'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:40:47'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:40:47'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:40:47'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:41:07'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:41:07'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:41:07'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:41:07'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:41:07'!
FAILURE!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:42:31' prior: 50863518!
test04cannotAddItemsToInvalidCart

	| interface userID userPassword catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface add: 1 of: 'isbn' toCart: 1]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:42:46' prior: 50863640!
test04cannotAddItemsToInvalidCart

	| interface catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface add: 1 of: 'isbn' toCart: 1]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:42:48'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:43:03'!
test05cannotListItemsOfInvalidCart

	| interface catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface add: 1 of: 'isbn' toCart: 1]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:43:12' prior: 50863671!
test05cannotListItemsOfInvalidCart

	| interface catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface add: 1 of: 'isbn' toCart: 1]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:43:48' prior: 50863685!
test05cannotListItemsOfInvalidCart

	| interface catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface listCart: 1]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:44:05' prior: 50863403!
listCart: aCartID

	(carts includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	
	^ (carts at: aCartID) listItems.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:44:14' prior: 50863595!
add: amountOfItems of: item toCart: aCartID
	
	| cart |
	
	(carts includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	
	cart := carts at: aCartID.
	cart add: amountOfItems of: item.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:44:45' prior: 50863712!
listCart: aCartID
	
	self assertValidID: aCartID.
	
	^ (carts at: aCartID) listItems.! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/19/2021 23:45:12'!
assertValidId: aCartID
	(carts includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:45:27' prior: 50863728!
listCart: aCartID
	
	self assertValidCartID: aCartID.
	
	^ (carts at: aCartID) listItems.! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/19/2021 23:45:37'!
assertValidCartID: aCartID
	(carts includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].! !

!methodRemoval: InnerUserInterface #assertValidId: stamp: 'MS 6/19/2021 23:45:37'!
assertValidId: aCartID
	(carts includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:45:54' prior: 50863719!
add: amountOfItems of: item toCart: aCartID
	
	| cart |
	
	self assertValidCartID: aCartID.
	
	cart := carts at: aCartID.
	cart add: amountOfItems of: item.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/19/2021 23:45:55'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/19/2021 23:45:55'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/19/2021 23:45:56'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/19/2021 23:45:56'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/19/2021 23:45:56'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:50:08'!
test06cannotAddItemsToExpiredCart

	| interface catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface listCart: 1]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/19/2021 23:50:23'!
test07cannotListItemsOfExpiredCart

	| interface catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface listCart: 1]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:56:35'!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart |
	
	self assertValidCartID: aCartID.
	
	cart := carts at: aCartID.
	cart add: amountOfItems of: item.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:56:44'!
createCartForUser: userID withPassword: userPassword atTime: aTime

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: cart.
	
	^ cartID
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:56:55'!
createCartForUser: userID withPassword: userPassword at: aTime

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: cart.
	
	^ cartID
	
	! !

!methodRemoval: InnerUserInterface #createCartForUser:withPassword:atTime: stamp: 'MS 6/19/2021 23:56:55'!
createCartForUser: userID withPassword: userPassword atTime: aTime

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: cart.
	
	^ cartID
	
	!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/19/2021 23:57:06'!
listCart: aCartID at: aTime
	
	self assertValidCartID: aCartID.
	
	^ (carts at: aCartID) listItems.! !

!methodRemoval: InnerUserInterface #listCart: stamp: 'MS 6/19/2021 23:57:09'!
listCart: aCartID
	
	self assertValidCartID: aCartID.
	
	^ (carts at: aCartID) listItems.!

!methodRemoval: InnerUserInterface #createCartForUser:withPassword: stamp: 'MS 6/19/2021 23:57:12'!
createCartForUser: userID withPassword: userPassword

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: cart.
	
	^ cartID
	
	!

!methodRemoval: InnerUserInterface #add:of:toCart: stamp: 'MS 6/19/2021 23:57:14'!
add: amountOfItems of: item toCart: aCartID
	
	| cart |
	
	self assertValidCartID: aCartID.
	
	cart := carts at: aCartID.
	cart add: amountOfItems of: item.!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/20/2021 00:13:48'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/20/2021 00:13:48'!
ERROR!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/20/2021 00:13:48'!
ERROR!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/20/2021 00:13:48'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/20/2021 00:13:48'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/20/2021 00:13:48'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/20/2021 00:13:48'!
FAILURE!

----QUIT----(20 June 2021 00:14:06) CuisUniversity-4532.image priorSource: 16975528!

----STARTUP---- (22 June 2021 23:08:50) as C:\Program Files (x86)\Smalltalk\windows64\CuisUniversity-4532.image!


Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts xxx catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/22/2021 23:20:19'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts xxx catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/22/2021 23:20:38' prior: 50863828!
createCartForUser: userID withPassword: userPassword at: aTime

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: cart.
	xxx at: cartID put: aTime.
	
	^ cartID
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/22/2021 23:21:38' prior: 50863809!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart |
	
	self assertValidCartID: aCartID at: aTime.
	
	xxx at: aCartID put: aTime.
	
	cart := carts at: aCartID.
	cart add: amountOfItems of: item.
	! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:26:25'!
assertCartID: aCartID isValidAt: aTime

	(xxx includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	(self cartIsTimedOut: (xxx at: aCartID) at: aTime) ifTrue: [^ self signalInvalidCartId ].
	! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:26:51' prior: 50863949!
assertCartID: aCartID isValidAt: aTime

	(xxx includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	(self assertCartIsTimedOut: (xxx at: aCartID) at: aTime) ifTrue: [^ self signalInvalidCartId ].
	! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:27:16'!
assertCartIsTimedOut: aCartTime at: aTime
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/22/2021 23:29:45' prior: 50863939!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	xxx at: aCartID put: aTime.
	
	cart := carts at: aCartID.
	cart add: amountOfItems of: item.
	! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:31:36' prior: 50863968!
assertCartIsTimedOut: aCartTime at: aTime
	^ (aTime - aCartTime) minute < 30! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:32:16' prior: 50863983!
assertCartIsTimedOut: aCartTime at: aTime

	^ (aTime - aCartTime) minute < 30! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:32:54' prior: 50863959!
assertCartID: aCartID isValidAt: aTime

	(xxx includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	(self assertCartIsTimedOut: (xxx at: aCartID) at: aTime) ifTrue: [^ self signalInvalidCartId ].
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/22/2021 23:33:46' prior: 50863851!
listCart: aCartID at: aTime
	
	self assertCartID: aCartID isValidAt: aTime.
	
	xxx at: aCartID put: aTime.
	
	^ (carts at: aCartID) listItems.! !

!methodRemoval: InnerUserInterface #assertValidCartID: stamp: 'MS 6/22/2021 23:33:50'!
assertValidCartID: aCartID
	(carts includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].!

!classDefinition: #InnerUserInterfaceTest category: 'TusLibros' stamp: 'MS 6/22/2021 23:35:04'!
TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: 'credentialValidatorValid credentialValidatorInvalid testObjectsFactory time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:35:01' prior: 50863118!
test01cannotCreateACartWithInvalidCredentials

	| interface userID userPassword catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword at: time] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !
!StoreTestObjectsFactory methodsFor: 'date' stamp: 'MS 6/22/2021 23:39:56'!
dateTimeToday
	
	^ DateAndTime date: today time: (Time hour: 19 minute: 00 second: 00).! !

Time hour: 19 minute: 00 second: 00!
!StoreTestObjectsFactory methodsFor: 'date' stamp: 'MS 6/22/2021 23:40:58'!
dateTimeTodayAfter30Minutes
	
	^ DateAndTime date: today time: (Time hour: 19 minute: 30 second: 01).! !
!StoreTestObjectsFactory methodsFor: 'date' stamp: 'MS 6/22/2021 23:41:04' prior: 50864054!
dateTimeTodayAfter30Minutes
	
	^ DateAndTime date: today time: (Time hour: 19 minute: 31 second: 00).! !
!StoreTestObjectsFactory methodsFor: 'date' stamp: 'MS 6/22/2021 23:41:28'!
dateTimeTomorrow
	
	^ DateAndTime date: today time: (Time hour: 19 minute: 00 second: 00).! !
!StoreTestObjectsFactory methodsFor: 'date' stamp: 'MS 6/22/2021 23:44:07' prior: 50864067!
dateTimeTomorrow
	
	^ DateAndTime year: 2021 month: 06 day: 23 hour: 19 minute: 30.! !

DateAndTime year: 2021 month: 06 day: 23 hour: 19 minute: 30.!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:44:50' prior: 50862957 overrides: 16927572!
setUp

	credentialValidatorValid := CredentialValidatorSimulatorValidCredentials new.
	credentialValidatorInvalid := CredentialValidatorSimulatorInvalidCredentials new.
	testObjectsFactory := StoreTestObjectsFactory new.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:45:18' prior: 50864029!
test01cannotCreateACartWithInvalidCredentials

	| interface userID userPassword catalog |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword at: time] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !

TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: 'credentialValidatorValid credentialValidatorInvalid testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterfaceTest category: 'TusLibros' stamp: 'MS 6/22/2021 23:45:38'!
TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: 'credentialValidatorValid credentialValidatorInvalid testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:45:44' prior: 50864092!
test01cannotCreateACartWithInvalidCredentials

	| interface userID userPassword catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword at: time] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/22/2021 23:45:49'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:46:01' prior: 50863184!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self assert: (interface listCart: cartID) isEmpty.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:46:09' prior: 50864152!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self assert: (interface listCart: cartID at: time) isEmpty.! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/22/2021 23:46:10'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/22/2021 23:46:10'!
ERROR!
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/22/2021 23:46:40' prior: 50863245!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.
	xxx := Dictionary new.
	lastId := 0.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/22/2021 23:46:42'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/22/2021 23:46:42'!
ERROR!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/22/2021 23:46:42'!
ERROR!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/22/2021 23:46:42'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/22/2021 23:46:42'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/22/2021 23:46:42'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/22/2021 23:46:42'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/22/2021 23:46:45'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/22/2021 23:46:45'!
ERROR!
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:47:08' prior: 50863989!
assertCartIsTimedOut: aCartTime at: aTime

	^ (aTime - aCartTime) minutes < 30! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/22/2021 23:47:10'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/22/2021 23:47:10'!
ERROR!
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:48:34' prior: 50864239!
assertCartIsTimedOut: aCartTime at: aTime

	^ (aTime - aCartTime) minutes > 30! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/22/2021 23:48:37'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:48:54' prior: 50863366!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: ((interface listCart: cartID at: time) size) equals: 1.
	self assert: (interface listCart: cartID at: time) includes: isbn.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:49:01' prior: 50864262!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID.
	
	self assert: ((interface listCart: cartID at: time) size) equals: 1.
	self assert: (interface listCart: cartID at: time) includes: isbn.
	! !

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/22/2021 23:49:03'!
ERROR!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/22/2021 23:49:03'!
ERROR!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:49:12' prior: 50864286!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	
	self assert: ((interface listCart: cartID at: time) size) equals: 1.
	self assert: (interface listCart: cartID at: time) includes: isbn.
	! !

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/22/2021 23:49:14'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:49:34' prior: 50863654!
test04cannotAddItemsToInvalidCart

	| interface catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface add: 1 of: 'isbn' toCart: 1 at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/22/2021 23:49:37'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:49:51' prior: 50863699!
test05cannotListItemsOfInvalidCart

	| interface catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface listCart: 1 at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/22/2021 23:49:53'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:50:00' prior: 50863784!
test06cannotAddItemsToExpiredCart

	| interface catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [interface listCart: 1 at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:51:41' prior: 50864382!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface listCart: 1 at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:52:16' prior: 50864397!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword creationTime |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	self should: [interface listCart: 1 at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:52:31' prior: 50864417!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword creationTime |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	self should: [interface listCart: cartID at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/22/2021 23:52:34'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:52:44' prior: 50864440!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword creationTime |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTomorrow .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	self should: [interface listCart: cartID at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/22/2021 23:52:45'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/22/2021 23:52:45'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/22/2021 23:56:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/22/2021 23:56:51'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/22/2021 23:56:51'!
FAILURE!

aTime - aCartTime!

(aTime - aCartTime) minutes!

(aTime - aCartTime)!

(aTime - aCartTime) totalMinutes!
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/22/2021 23:59:24' prior: 50864252!
assertCartIsTimedOut: aCartTime at: aTime

	^ (aTime - aCartTime) totalMinutes > 30! !

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/22/2021 23:59:34'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/22/2021 23:59:49' prior: 50864467!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword creationTime |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	self should: [interface listCart: cartID at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/22/2021 23:59:50'!
PASSED!

!methodRemoval: StoreTestObjectsFactory #dateTimeTomorrow stamp: 'MS 6/22/2021 23:59:55'!
dateTimeTomorrow
	
	^ DateAndTime year: 2021 month: 06 day: 23 hour: 19 minute: 30.!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:00:46' prior: 50864520!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword creationTime isbn |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	self should: [interface listCart: cartID at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:00:58' prior: 50864552!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword creationTime isbn |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	
	self should: [interface add: 1 of: isbn toCart: cartID at: time.]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:01:00' prior: 50864579!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword creationTime isbn |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	self should: [interface add: 1 of: isbn toCart: cartID at: time.]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 00:01:03'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:01:23' prior: 50863797!
test07cannotListItemsOfExpiredCart

	| interface catalog time cartID userID userPassword creationTime isbn |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	self should: [interface listCart: 1]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:01:40' prior: 50864633!
test07cannotListItemsOfExpiredCart

	| interface catalog time cartID userID userPassword creationTime |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	self should: [interface listCart: cartID at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 00:01:43'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:17:18'!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword creationTime |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	self should: [interface listCart: cartID at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:17:47' prior: 50864682!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface listCart: cartID at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:22:34' prior: 50864705!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword cardExpDate cardNumber cardOwner |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface checkout: cartID withCard: cardNumber from: cardOwner expiringOn: cardExpDate.]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:23:50' prior: 50864726!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.

	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface checkout: cartID withCard: 0 from: '' expiringOn: 01]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:24:05' prior: 50864749!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.

	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface checkout: cartID withCard: 0 from: '' expiringOn: '']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:25:18'!
checkout: cartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:25:39' prior: 50864771!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.

	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface checkout: cartID at: time withCard: 0 from: '' expiringOn: '']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:25:53' prior: 50864792!
checkout: cartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:26:30' prior: 50864820!
checkout: cartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate! !
!CreditCard class methodsFor: 'instance creation' stamp: 'MS 6/23/2021 00:32:01'!
number: aCardNumber from: anOwnerName expiringOn: aMonth 
	
	^self new initializeExpiringOn: aMonth! !
!CreditCard class methodsFor: 'instance creation' stamp: 'MS 6/23/2021 00:32:26' prior: 50864832!
number: aCardNumber from: anOwnerName expiringOn: aMonth 
	
	^self new initializeWith: aCardNumber from: anOwnerName expiringOn: aMonth.! !

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'MS 6/23/2021 00:33:02'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'MS 6/23/2021 00:33:03'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration number owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 00:33:01'!
initializeWith: aCardNumber from: anOwnerName expiringOn: aMonth.
	
	expiration := aMonth.
	number := aCardNumber.
	owner := anOwnerName.
	! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 00:34:16' prior: 50864861!
initializeWith: aCardNumber from: anOwnerName expiringOn: aMonth.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := aMonth.
	! !
!CreditCard methodsFor: 'signaling' stamp: 'MS 6/23/2021 00:35:54'!
signalInvalidCreditCard! !
!CreditCard methodsFor: 'signaling' stamp: 'MS 6/23/2021 00:36:25' prior: 50864881!
signalInvalidCreditCard
	^ self error: self class invalidCreditCard.! !
!CreditCard class methodsFor: 'error' stamp: 'MS 6/23/2021 00:37:06'!
invalidCreditCard
	^ 'No se puede comprar con una tarjeta inválida.'! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:38:04' prior: 50864826!
checkout: cartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard |
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:38:09' prior: 50864895!
checkout: cartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:45:59'!
test09cannotCheckoutAnInvalidCart

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface checkout: cartID at: time withCard: 0 from: '' expiringOn: '']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:47:27' prior: 50864913!
test09cannotCheckoutAnInvalidCart

	| interface catalog time cardExpDate cardNumber cardOwner |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [ interface checkout: 1 at: time withCard: cardNumber from: cardOwner expiringOn: cardExpDate]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!CreditCard methodsFor: 'signaling' stamp: 'MS 6/23/2021 00:49:18' prior: 50864885!
signalInvalidCreditCard

	^ self error: self class invalidCreditCard.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:49:45' prior: 50864904!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	xxx at: aCartID put: aTime.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 00:54:30'!
test10checkoutACartIsListedInPurchases

	| interface catalog time cardExpDate cardNumber cardOwner |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [ interface checkout: 1 at: time withCard: cardNumber from: cardOwner expiringOn: cardExpDate]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:55:29' prior: 50864958!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	xxx at: aCartID put: aTime.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:56:19' prior: 50864987!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard aMonth |
	
	aMonth := 
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	xxx at: aCartID put: aTime.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:57:15' prior: 50864999!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard aMonth |
	
	aMonth := Month year: (aDate first: 2) month: (aDate last: 4).
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	xxx at: aCartID put: aTime.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 00:57:48' prior: 50865011!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard aMonth |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	xxx at: aCartID put: aTime.! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:02:58' prior: 50864869!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := anExpirationDate.
	! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:03:08' prior: 50865037!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	
	
	expiration := anExpirationDate.
	! !
!CreditCard class methodsFor: 'instance creation' stamp: 'MS 6/23/2021 01:03:16' prior: 50864839!
number: aCardNumber from: anOwnerName expiringOn: anExpirationDate 
	
	^self new initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate.! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:04:26' prior: 50865051!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate| aMonth |
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	
	aMonth := Month year: (anExpirationDate last: 4) month: (anExpirationDate first: 2) .
	expiration := anExpirationDate.
	! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:04:39' prior: 50865073!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month year: (anExpirationDate last: 4) month: (anExpirationDate first: 2) .
	! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:05:31' prior: 50865090!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].
	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month year: (anExpirationDate last: 4) month: (anExpirationDate first: 2) .
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 01:05:31'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 01:05:31'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:05:31'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 01:05:31'!
FAILURE!
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:05:54' prior: 50865106!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month year: (anExpirationDate last: 4) month: (anExpirationDate first: 2) .
	! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:08:54' prior: 50865205!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].
	(anOwnerName size = 6) ifTrue: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month year: (anExpirationDate last: 4) month: (anExpirationDate first: 2) .
	! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:11:02' prior: 50865221!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].
	(anExpirationDate size = 6) ifTrue: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month year: (anExpirationDate last: 4) month: (anExpirationDate first: 2) .
	! !

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 01:11:36'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 01:11:36'!
FAILURE!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:11:57' prior: 50864798!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.

	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface checkout: cartID at: time withCard: 0 from: '' expiringOn: '']
	 raise: Error
	withMessageText: CreditCard invalidCreditCard .
	! !

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 01:11:58'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:12:02' prior: 50865264!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.

	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface checkout: cartID at: time withCard: 0 from: '' expiringOn: '']
	 raise: Error
	withMessageText: CreditCard invalidCreditCard.
	! !

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 01:12:08'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:12:12'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:12:12'!
FAILURE!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:14:33' prior: 50864935!
test09cannotCheckoutAnInvalidCart

	| interface catalog time|

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [ interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:15:10' prior: 50865321!
test09cannotCheckoutAnInvalidCart

	| interface catalog time|

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [ interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.! !

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:15:12'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:15:12'!
FAILURE!

self size!
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:16:57' prior: 50865239!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].
	(anExpirationDate size = 6) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month year: (anExpirationDate last: 4) month: (anExpirationDate first: 2) .
	! !

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:17:00'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:17:00'!
FAILURE!
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:17:57' prior: 50865362!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].
	(anExpirationDate size = 6) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month month: (anExpirationDate first: 2) year: (anExpirationDate last: 4) .
	! !
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:17:59' prior: 50865387!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].
	(anExpirationDate size = 6) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month month: (anExpirationDate first: 2) year: (anExpirationDate last: 4).
	! !

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:18:10'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:18:10'!
FAILURE!
!CreditCard methodsFor: 'initialization' stamp: 'MS 6/23/2021 01:18:41' prior: 50865405!
initializeWith: aCardNumber from: anOwnerName expiringOn: anExpirationDate
.

	(anOwnerName withBlanksTrimmed isEmpty) ifTrue: [ self signalInvalidCreditCard ].
	((aCardNumber numberOfDigitsInBase: 10) = 16) ifFalse: [ self signalInvalidCreditCard ].
	(anExpirationDate size = 6) ifFalse: [ self signalInvalidCreditCard ].

	owner := anOwnerName.
	number := aCardNumber.
	expiration := Month month: ((anExpirationDate first: 2) asNumber) year: ((anExpirationDate last: 4) asNumber).
	! !

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 01:18:43'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:19:12' prior: 50864969!
test10checkoutACartIsListedInPurchases

	| interface catalog time cardExpDate |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [ interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:19:18' prior: 50865452!
test10checkoutACartIsListedInPurchases

	| interface catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	
	self should: [ interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:20:02' prior: 50865470!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	
	self should: [ interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:20:42' prior: 50865487!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:21:51' prior: 50865513!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword )
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:25:41' prior: 50865537!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection new.
	expectedList add: {isbn . 1}.
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:27:33' prior: 50865563!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection new.
	expectedList add: {isbn . 1}.
	expectedList add: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !
!InnerUserInterface methodsFor: 'nil' stamp: 'MS 6/23/2021 01:28:19'!
listPurchasesOf: anUserID withPassword: anUserPassword! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 01:29:25' prior: 50865622!
listPurchasesOf: anUserID withPassword: anUserPassword

	credentialValidator logWith: anUserID and: anUserPassword.! !

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/23/2021 01:30:35'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts cartsLastTimeUsed catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 01:30:35' prior: 50863995!
assertCartID: aCartID isValidAt: aTime

	(cartsLastTimeUsed includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	(self assertCartIsTimedOut: (cartsLastTimeUsed at: aCartID) at: aTime) ifTrue: [^ self signalInvalidCartId ].
	! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 01:30:35' prior: 50863973!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	cart := carts at: aCartID.
	cart add: amountOfItems of: item.
	! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 01:30:35' prior: 50863927!
createCartForUser: userID withPassword: userPassword at: aTime

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: cart.
	cartsLastTimeUsed at: cartID put: aTime.
	
	^ cartID
	
	! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 01:30:35' prior: 50864197!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.
	cartsLastTimeUsed := Dictionary new.
	lastId := 0.! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 01:30:35' prior: 50865025!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard aMonth |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 01:30:35' prior: 50864005!
listCart: aCartID at: aTime
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	^ (carts at: aCartID) listItems.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 01:41:11' prior: 50865592!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts cartsLastTimeUsed cartsUserID salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/23/2021 01:51:16'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts cartsLastTimeUsed cartsUserID salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 01:52:56' prior: 50865688!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard aMonth salesBook userID |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 01:55:00' prior: 50865755!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard aMonth salesBook userID cart cashier merchant |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	cart := carts at: aCartID .
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchant on: aTime registeringOn: salesBook! !

Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts cartsLastTimeUsed cartsUserID merchantProcessor salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/23/2021 01:56:36'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts cartsLastTimeUsed cartsUserID merchantProcessor salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 01:58:01' prior: 50865770!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard aMonth salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	cart := carts at: aCartID .
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 01:58:05' prior: 50865808!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard aMonth salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	cart := carts at: aCartID .
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 01:58:39' prior: 50865828!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	cart := carts at: aCartID .
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkout.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 01:59:12' prior: 50865848!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier total |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	cart := carts at: aCartID .
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	total := cashier checkOut.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 02:04:26' prior: 50865627!
listPurchasesOf: anUserID withPassword: anUserPassword

	| sales |
	credentialValidator logWith: anUserID and: anUserPassword.
	
	sales := salesBooks at: anUserID.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 02:07:08' prior: 50865890!
listPurchasesOf: anUserID withPassword: anUserPassword

	| sales purchases total |
	credentialValidator logWith: anUserID and: anUserPassword.
	
	sales := salesBooks at: anUserID.
	
	purchases := sales inject: OrderedCollection new addingAll: [ :aSale | aSale purchase].
	
	total := sales inject: 0 into: [ :totalAmount :aSale | totalAmount + aSale total].
	
	^ OrderedCollection with: purchases with: total.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 02:07:17' prior: 50865899!
listPurchasesOf: anUserID withPassword: anUserPassword

	| sales purchases total |
	
	credentialValidator logWith: anUserID and: anUserPassword.
	
	sales := salesBooks at: anUserID.
	
	purchases := sales inject: OrderedCollection new addingAll: [ :aSale | aSale purchase].
	
	total := sales inject: 0 into: [ :totalAmount :aSale | totalAmount + aSale total].
	
	^ OrderedCollection with: purchases with: total.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 02:07:24' prior: 50865915!
listPurchasesOf: anUserID withPassword: anUserPassword

	| sales purchases total |
	
	credentialValidator logWith: anUserID and: anUserPassword.
	
	sales := salesBooks at: anUserID.
	
	purchases := sales inject: OrderedCollection new addingAll: [ :aSale | aSale purchase].
	total := sales inject: 0 into: [ :totalAmount :aSale | totalAmount + aSale total].
	
	^ OrderedCollection with: purchases with: total.! !

Object subclass: #Sale
	instanceVariableNames: 'total items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Sale category: 'TusLibros' stamp: 'MS 6/23/2021 02:10:23'!
Object subclass: #Sale
	instanceVariableNames: 'total items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Sale methodsFor: 'nil' stamp: 'MS 6/23/2021 02:10:42'!
purchase
	^ items! !
!Sale class methodsFor: 'instance creation' stamp: 'MS 6/23/2021 02:11:48'!
of: aTotal for: aListOfItems

	"should assert total is not negative or 0!!"
	^self new initializeTotal: aTotal for: aListOfItems.! !
!Sale methodsFor: 'initialization' stamp: 'MS 6/23/2021 02:12:16'!
initializeTotal: aTotal for: aListOfItems

	total := aTotal .
	items := aListOfItems .! !

!methodRemoval: Sale #initializeTotal: stamp: 'MS 6/23/2021 02:12:27'!
initializeTotal: aTotal

	total := aTotal !

!methodRemoval: Sale class #of: stamp: 'MS 6/23/2021 02:12:30'!
of: aTotal

	"should assert total is not negative or 0!!"
	^self new initializeTotal: aTotal !
!Cashier methodsFor: 'checkout - private' stamp: 'MS 6/23/2021 02:13:00' prior: 50862568!
createSale

	^ Sale of: total for: cart items.
! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MS 6/23/2021 02:13:21'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MS 6/23/2021 02:13:21'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MS 6/23/2021 02:13:21'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MS 6/23/2021 02:13:21'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MS 6/23/2021 02:13:21'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MS 6/23/2021 02:13:21'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 02:13:39'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 02:13:39'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 02:13:39'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 02:13:39'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 02:13:39'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 02:13:39'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 02:13:39'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 02:13:40'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 02:13:40'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 02:13:40'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 02:13:40'!
ERROR!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MS 6/23/2021 02:13:47'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MS 6/23/2021 02:13:47'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MS 6/23/2021 02:13:47'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MS 6/23/2021 02:13:47'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MS 6/23/2021 02:13:47'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MS 6/23/2021 02:13:47'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MS 6/23/2021 02:13:56'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MS 6/23/2021 02:13:56'!
ERROR!
!Cashier methodsFor: 'checkout - private' stamp: 'MS 6/23/2021 02:14:21' prior: 50865983!
createSale

	^ Sale of: total for: cart listItems.
! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'MS 6/23/2021 02:14:23'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'MS 6/23/2021 02:14:23'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'MS 6/23/2021 02:14:23'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'MS 6/23/2021 02:14:23'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'MS 6/23/2021 02:14:23'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'MS 6/23/2021 02:14:23'!
PASSED!
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 02:15:03' prior: 50865869!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier total |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	cart := carts at: aCartID .
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 02:15:09' prior: 50866097!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	cart := carts at: aCartID .
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 02:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 02:15:12'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 02:15:12'!
ERROR!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 02:15:16'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 02:15:19'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 02:15:22'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 02:15:22'!
ERROR!

----QUIT----(23 June 2021 02:20:36) CuisUniversity-4532.image priorSource: 17032160!

----STARTUP---- (23 June 2021 22:28:16) as C:\Program Files (x86)\Smalltalk\windows64\CuisUniversity-4532.image!


!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 22:28:40'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 22:28:40'!
ERROR!

Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator xxx carts cartsLastTimeUsed cartsUserID merchantProcessor salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/23/2021 22:29:16'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator xxx carts cartsLastTimeUsed cartsUserID merchantProcessor salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/23/2021 22:29:35' prior: 50865678!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.
	cartsLastTimeUsed := Dictionary new.
	xxx := Dictionary new.
	lastId := 0.! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/23/2021 22:32:09' prior: 50865643!
assertCartID: aCartID isValidAt: aTime

	(xxx includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	(self assertCartIsTimedOut: (self lastTimeUsedCart: aCartID) at: aTime) ifTrue: [^ self signalInvalidCartId ].
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 22:33:03'!
lastTimeUsedCart: aCartID
	(xxx at: aCartID) at: 1.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 22:34:48' prior: 50865665!
createCartForUser: userID withPassword: userPassword at: aTime

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	xxx at: cartID put: (OrderedCollection new with: cart with: aTime with: userID).
	
	^ cartID
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 22:36:31' prior: 50865654!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cart := (xxx at: aCartID) at: 0.
	(xxx at: aCartID) at: 1 put: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	cart := carts at: aCartID.
	cart add: amountOfItems of: item.
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 22:36:42' prior: 50866262!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(xxx at: aCartID) at: 1 put: aTime.
	
	cart := (xxx at: aCartID) at: 0.
	cart add: amountOfItems of: item.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	
	cart := carts at: aCartID.
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 22:36:50' prior: 50866275!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(xxx at: aCartID) at: 1 put: aTime.
	
	cart := (xxx at: aCartID) at: 0.
	cart add: amountOfItems of: item.
	
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 22:37:47' prior: 50865701!
listCart: aCartID at: aTime
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(xxx at: aCartID) at: 1 put: aTime.
	
	^ ((xxx at: aCartID) at: 0) listItems.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 22:55:31' prior: 50866118!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartsLastTimeUsed at: aCartID put: aTime.
	cart := carts at: aCartID .
	
	
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 22:56:00' prior: 50866306!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(xxx at: aCartID) at: 1 put: aTime.
	cart := (xxx at: aCartID) at: 0.
	
	
	userID := cartsUserID at: aCartID.
	salesBook := salesBooks at: userID.
	
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 22:57:44' prior: 50866327!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(xxx at: aCartID) at: 1 put: aTime.
	cart := (xxx at: aCartID) at: 0.
	userID := cart := (xxx at: aCartID) at: 2.
	
	salesBook := salesBooks at: userID.
	
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/23/2021 22:58:08' prior: 50866223!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	xxx := Dictionary new.
	lastId := 0.! !

Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator xxx merchantProcessor salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/23/2021 22:58:30'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator xxx merchantProcessor salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/23/2021 22:58:38'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts merchantProcessor salesBooks catalog lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 22:58:38' prior: 50866348!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(carts at: aCartID) at: 1 put: aTime.
	cart := (carts at: aCartID) at: 0.
	userID := cart := (carts at: aCartID) at: 2.
	
	salesBook := salesBooks at: userID.
	
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 22:58:38' prior: 50866244!
lastTimeUsedCart: aCartID
	(carts at: aCartID) at: 1.! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 22:58:38' prior: 50866298!
listCart: aCartID at: aTime
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(carts at: aCartID) at: 1 put: aTime.
	
	^ ((carts at: aCartID) at: 0) listItems.! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 22:58:38' prior: 50866288!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(carts at: aCartID) at: 1 put: aTime.
	
	cart := (carts at: aCartID) at: 0.
	cart add: amountOfItems of: item.
	
	
	! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 22:58:38' prior: 50866369!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.
	lastId := 0.! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 22:58:38' prior: 50866249!
createCartForUser: userID withPassword: userPassword at: aTime

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: (OrderedCollection new with: cart with: aTime with: userID).
	
	^ cartID
	
	! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 22:58:38' prior: 50866234!
assertCartID: aCartID isValidAt: aTime

	(carts includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	(self assertCartIsTimedOut: (self lastTimeUsedCart: aCartID) at: aTime) ifTrue: [^ self signalInvalidCartId ].
	
	! !
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 22:59:46'!
UserIDOf: aCartID
	(carts at: aCartID) at: 2.! !
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:00:01'!
cartOf: aCartID
	(carts at: aCartID) at: 0.! !
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:00:36'!
lastTimeUsedOf: aCartID
	(carts at: aCartID) at: 1.! !

!methodRemoval: InnerUserInterface #lastTimeUsedCart: stamp: 'MS 6/23/2021 23:00:41'!
lastTimeUsedCart: aCartID
	(carts at: aCartID) at: 1.!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 23:01:42' prior: 50866439!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart cartTime |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := 	self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	
	cart := (carts at: aCartID) at: 0.
	cart add: amountOfItems of: item.
	
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 23:02:32' prior: 50866500!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart cartTime |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	
	cart := (carts at: aCartID) at: 0.
	cart add: amountOfItems of: item.
	
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 23:02:57' prior: 50866512!
add: amountOfItems of: item toCart: aCartID at: aTime
	
	| cart cartTime |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	
	cart := self cartOf: aCartID.
	cart add: amountOfItems of: item.
	
	
	! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 23:04:05' prior: 50866430!
listCart: aCartID at: aTime
	
	| cartTime |
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	
	^ ((self cartOf: aCartID) at: 0) listItems.! !
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 23:04:22' prior: 50866535!
listCart: aCartID at: aTime
	
	| cartTime |
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	
	^ (self cartOf: aCartID) listItems.! !
!InnerUserInterface methodsFor: 'asserting' stamp: 'MS 6/23/2021 23:05:38' prior: 50866473!
assertCartID: aCartID isValidAt: aTime

	(carts includesKey: aCartID) ifFalse: [^ self signalInvalidCartId ].
	(self assertCartIsTimedOut: (self lastTimeUsedOf: aCartID) at: aTime) ifTrue: [^ self signalInvalidCartId ].
	
	! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/23/2021 23:06:23' prior: 50866450!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastId := 0.! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/23/2021 23:06:56'!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog withMP: aMerchantProcessor.

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	merchantProcessor  := aMerchantProcessor.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastId := 0.! !
!InnerUserInterface class methodsFor: 'instance creation' stamp: 'MS 6/23/2021 23:07:16'!
with: aCredentialValidator acceptingItemsOf: aCatalog withMP: aMerchantProcessor

	^ self new initializeWith: aCredentialValidator acceptingItemsOf: aCatalog withMP: aMerchantProcessor .! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:09:35' prior: 50864128!
test01cannotCreateACartWithInvalidCredentials

	| interface userID userPassword catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog withMP: self.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword at: time] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !
!InnerUserInterface class methodsFor: 'instance creation' stamp: 'MS 6/23/2021 23:09:58'!
with: aCredentialValidator acceptingItemsOf: aCatalog throughtMP: aMerchantProcessor

	^ self new initializeWith: aCredentialValidator acceptingItemsOf: aCatalog withMP: aMerchantProcessor .! !
!InnerUserInterfaceTest methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 23:09:58' prior: 50866596!
test01cannotCreateACartWithInvalidCredentials

	| interface userID userPassword catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog throughtMP: self.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword at: time] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !

!methodRemoval: InnerUserInterface class #with:acceptingItemsOf:withMP: stamp: 'MS 6/23/2021 23:09:58'!
with: aCredentialValidator acceptingItemsOf: aCatalog withMP: aMerchantProcessor

	^ self new initializeWith: aCredentialValidator acceptingItemsOf: aCatalog withMP: aMerchantProcessor .!
!InnerUserInterface class methodsFor: 'instance creation' stamp: 'MS 6/23/2021 23:10:05' prior: 50866616!
with: aCredentialValidator acceptingItemsOf: aCatalog throughtMP: aMerchantProcessor

	^ self new initializeWith: aCredentialValidator acceptingItemsOf: aCatalog throughtMP: aMerchantProcessor .! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/23/2021 23:10:22'!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog thruoghtMP: aMerchantProcessor.

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	merchantProcessor  := aMerchantProcessor.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastId := 0.! !

!methodRemoval: InnerUserInterface #initializeWith:acceptingItemsOf:withMP: stamp: 'MS 6/23/2021 23:10:22'!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog withMP: aMerchantProcessor.

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	merchantProcessor  := aMerchantProcessor.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastId := 0.!
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/23/2021 23:10:35'!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog throughtMP: aMerchantProcessor.

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	merchantProcessor  := aMerchantProcessor.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastId := 0.! !

!methodRemoval: InnerUserInterface #initializeWith:acceptingItemsOf:thruoghtMP: stamp: 'MS 6/23/2021 23:10:35'!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog thruoghtMP: aMerchantProcessor.

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	merchantProcessor  := aMerchantProcessor.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastId := 0.!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 23:10:53'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:11:03' prior: 50864171!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self..
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self assert: (interface listCart: cartID at: time) isEmpty.! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:11:05'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:11:05'!
ERROR!
!InnerUserInterface methodsFor: 'cart' stamp: 'MS 6/23/2021 23:11:45' prior: 50866459!
createCartForUser: userID withPassword: userPassword at: aTime

	| cart cartID |
	credentialValidator logWith: userID and: userPassword.
	
	cart := Cart acceptingItemsOf: catalog.
	
	cartID := self generateCartID.
	
	carts at: cartID put: (OrderedCollection with: cart with: aTime with: userID).
	
	^ cartID
	
	! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:11:49'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:11:49'!
ERROR!

self lastTimeUsedOf: aCartID!
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:12:32' prior: 50866491!
lastTimeUsedOf: aCartID
	^(carts at: aCartID) at: 1.! !
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:12:35' prior: 50866487!
cartOf: aCartID
	^ (carts at: aCartID) at: 0.! !
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:12:38' prior: 50866483!
UserIDOf: aCartID
	^ (carts at: aCartID) at: 2.! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:12:41'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:12:41'!
ERROR!
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:13:33' prior: 50866771!
cartOf: aCartID
	^ (carts at: aCartID) at: 1.! !
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:13:38' prior: 50866788!
cartOf: aCartID
	^ (carts at: aCartID) at: 2.! !
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:13:40' prior: 50866776!
UserIDOf: aCartID
	^ (carts at: aCartID) at: 3.! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:13:43'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:13:43'!
ERROR!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:13:51'!
ERROR!

self at: 0!

self at: 1!

self at: 2!

self at: 1!

self at: 1!

self at: 2!
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:14:54' prior: 50866766!
lastTimeUsedOf: aCartID
	^(carts at: aCartID) at: 2.! !
!InnerUserInterface methodsFor: 'private' stamp: 'MS 6/23/2021 23:14:58' prior: 50866793!
cartOf: aCartID
	^ (carts at: aCartID) at: 1.! !

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:15:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:15:03'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:15:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:15:06'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 23:15:08'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 23:15:10'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:15:11'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:15:12'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:15:15'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:15:17'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:15:17'!
ERROR!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:21:54' prior: 50865709!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:21:57'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:21:57'!
ERROR!
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:22:30' prior: 50866403!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	(carts at: aCartID) at: 1 put: aTime.
	cart := self cartOf: aCartID.
	userID := cart := (carts at: aCartID) at: 2.
	
	salesBook := salesBooks at: userID.
	
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:22:48' prior: 50866904!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier cartTime |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	cart := self cartOf: aCartID.
	userID := cart := (carts at: aCartID) at: 2.
	
	salesBook := salesBooks at: userID.
	
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:23:04' prior: 50866925!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier cartTime |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	cart := self cartOf: aCartID.
	userID := self UserIDOf: aCartID.
	
	salesBook := salesBooks at: userID.
	
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:23:22'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:23:22'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:23:22'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:23:25'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:23:25'!
ERROR!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:23:28'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:23:30'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:23:30'!
ERROR!
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:25:04' prior: 50866947!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier cartTime |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	cart := self cartOf: aCartID.
	userID := self UserIDOf: aCartID.
	
	"salesBook := salesBooks at: userID."
	salesBook := OrderedCollection new.
	
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:25:10'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:25:10'!
ERROR!

!classDefinition: #InnerUserInterfaceTest category: 'TusLibros' stamp: 'MS 6/23/2021 23:25:36'!
TestCase subclass: #InnerUserInterfaceTest
	instanceVariableNames: 'credentialValidatorValid credentialValidatorInvalid testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:25:35'!
debit: anAmount from: aCreditCard 

	^debitBehavior value: anAmount value: aCreditCard ! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:26:17' prior: 50864082 overrides: 16927572!
setUp

	credentialValidatorValid := CredentialValidatorSimulatorValidCredentials new.
	credentialValidatorInvalid := CredentialValidatorSimulatorInvalidCredentials new.
	testObjectsFactory := StoreTestObjectsFactory new.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:26:50' prior: 50867073 overrides: 16927572!
setUp

	credentialValidatorValid := CredentialValidatorSimulatorValidCredentials new.
	credentialValidatorInvalid := CredentialValidatorSimulatorInvalidCredentials new.
	testObjectsFactory := StoreTestObjectsFactory new.
		debitBehavior := [ :anAmount :aCreditCard | | debitedAmout debitedCreditCard | 
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ].! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:27:02' prior: 50867084 overrides: 16927572!
setUp
	| debitedAmout debitedCreditCard | 
	
	credentialValidatorValid := CredentialValidatorSimulatorValidCredentials new.
	credentialValidatorInvalid := CredentialValidatorSimulatorInvalidCredentials new.
	testObjectsFactory := StoreTestObjectsFactory new.
		debitBehavior := [ :anAmount :aCreditCard | 
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ].! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:27:08' prior: 50867100 overrides: 16927572!
setUp
	| debitedAmout debitedCreditCard | 
	
	credentialValidatorValid := CredentialValidatorSimulatorValidCredentials new.
	credentialValidatorInvalid := CredentialValidatorSimulatorInvalidCredentials new.
	testObjectsFactory := StoreTestObjectsFactory new.
	debitBehavior := [ :anAmount :aCreditCard | 		debitedAmout := anAmount. 		debitedCreditCard := aCreditCard ].! !

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:27:12'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:27:12'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:27:16'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:27:16'!
ERROR!
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:30:58' prior: 50865931!
listPurchasesOf: anUserID withPassword: anUserPassword

	| sales purchases total |
	
	credentialValidator logWith: anUserID and: anUserPassword.
	
	sales := salesBooks at: anUserID ifAbsent: [OrderedCollection new].
	
	purchases := sales inject: OrderedCollection new addingAll: [ :aSale | aSale purchase].
	total := sales inject: 0 into: [ :totalAmount :aSale | totalAmount + aSale total].
	
	^ OrderedCollection with: purchases with: total.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:31:46' prior: 50867026!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier cartTime |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	cart := self cartOf: aCartID.
	userID := self UserIDOf: aCartID.
	
	salesBook := salesBooks at: userID ifAbsent: [OrderedCollection new].
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:31:49'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:31:49'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:31:49'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:32:25'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:32:25'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:32:38'!
FAILURE!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:33:49' prior: 50866866!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:33:51'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:33:51'!
FAILURE!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:34:37'!
test10checkoutACartWithItemsIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!methodRemoval: InnerUserInterfaceTest #test10checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:34:37'!
test10checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:34:44'!
test11checkoutACartWithItemsIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!methodRemoval: InnerUserInterfaceTest #test10checkoutACartWithItemsIsListedInPurchases stamp: 'MS 6/23/2021 23:34:45'!
test10checkoutACartWithItemsIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:36:34'!
test10listPurchasesOfUserWithNoSalesIsEmpty

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:37:35' prior: 50867397!
test10listPurchasesOfUserWithNoSalesIsEmpty

	| interface catalog userID userPassword  |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.
	

	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: OrderedCollection new.
	! !

!testRun: #InnerUserInterfaceTest #test10listPurchasesOfUserWithNoSalesIsEmpty stamp: 'MS 6/23/2021 23:37:37'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test10listPurchasesOfUserWithNoSalesIsEmpty stamp: 'MS 6/23/2021 23:37:37'!
FAILURE!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:38:06' prior: 50867428!
test10listPurchasesOfUserWithNoSalesIsEmpty

	| interface catalog userID userPassword  |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.
	

	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: (OrderedCollection with: (OrderedCollection new) with: 0).	! !

!testRun: #InnerUserInterfaceTest #test10listPurchasesOfUserWithNoSalesIsEmpty stamp: 'MS 6/23/2021 23:38:08'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:38:36'!
test11checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!methodRemoval: InnerUserInterfaceTest #test11checkoutACartWithItemsIsListedInPurchases stamp: 'MS 6/23/2021 23:38:36'!
test11checkoutACartWithItemsIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: {isbn . 1} with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:38:44'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:38:44'!
FAILURE!
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:40:01' prior: 50867162!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier cartTime |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	cart := self cartOf: aCartID.
	userID := self UserIDOf: aCartID.
	
	salesBook := salesBooks at: userID ifAbsent: [salesBooks at: userID put: OrderedCollection new].
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:40:54' prior: 50867543!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier cartTime |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	cart := self cartOf: aCartID.
	userID := self UserIDOf: aCartID.
	
	salesBook := salesBooks at: userID ifAbsent: [salesBooks at: userID put: OrderedCollection new].
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.! !

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:40:58'!
FAILURE!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:40:58'!
FAILURE!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:41:41' prior: 50867473!
test11checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: (OrderedCollection with: isbn) with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:41:42'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:42:06' prior: 50867598!
test11checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 2 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: (OrderedCollection with: isbn with: isbn) with: 2*testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:42:07'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:42:12' prior: 50867633!
test11checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	
	expectedList := OrderedCollection with: (OrderedCollection with: isbn) with: testObjectsFactory itemSellByTheStorePrice.
	
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:42:13'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:44:08'!
test12cannotlistPurchasesWithInvalidCredentials

	| interface userID userPassword catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog throughtMP: self.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [ interface createCartForUser: userID withPassword: userPassword at: time] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:44:34' prior: 50867704!
test12cannotlistPurchasesWithInvalidCredentials

	| interface userID userPassword catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog throughtMP: self.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [interface listPurchasesOf: userID withPassword: userPassword] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:44:43' prior: 50867725!
test12cannotlistPurchasesWithInvalidCredentials

	| interface userID userPassword catalog |

	catalog := testObjectsFactory defaultCatalog.
	
	interface := InnerUserInterface with: credentialValidatorInvalid acceptingItemsOf: catalog throughtMP: self.
	userID := 'invalidUser'.
	userPassword := 'password'.

	self 
		should: [interface listPurchasesOf: userID withPassword: userPassword] 
		raise: Error 
		withMessageText: CredentialValidatorSimulator errorInvalidUsernameOrPassword.! !

!testRun: #InnerUserInterfaceTest #test12cannotlistPurchasesWithInvalidCredentials stamp: 'MS 6/23/2021 23:44:45'!
PASSED!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/23/2021 23:46:46'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts merchantProcessor salesBooks catalog lastCartId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 23:46:46' prior: 50866566!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastCartId := 0.! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 23:46:46' prior: 50866689!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog throughtMP: aMerchantProcessor.

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	merchantProcessor  := aMerchantProcessor.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastCartId := 0.! !
!InnerUserInterface methodsFor: 'as yet unclassified' stamp: 'MS 6/23/2021 23:46:46' prior: 50863240!
generateCartID
	lastCartId := lastCartId + 1.
	
	^ lastCartId.! !

Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts merchantProcessor salesBooks catalog lastCartId lastTransactionId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InnerUserInterface category: 'TusLibros' stamp: 'MS 6/23/2021 23:46:55'!
Object subclass: #InnerUserInterface
	instanceVariableNames: 'credentialValidator carts merchantProcessor salesBooks catalog lastCartId lastTransactionId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!methodRemoval: InnerUserInterface #initializeWith:acceptingItemsOf: stamp: 'MS 6/23/2021 23:47:00'!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastCartId := 0.!

!methodRemoval: InnerUserInterface class #with:acceptingItemsOf: stamp: 'MS 6/23/2021 23:47:03'!
with: aCredentialValidator acceptingItemsOf: aCatalog

	^ self new initializeWith: aCredentialValidator acceptingItemsOf: aCatalog.!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 23:47:06'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:47:06'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:47:06'!
ERROR!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:47:06'!
ERROR!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:47:06'!
ERROR!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 23:47:06'!
ERROR!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 23:47:06'!
ERROR!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:47:07'!
ERROR!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:47:07'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10listPurchasesOfUserWithNoSalesIsEmpty stamp: 'MS 6/23/2021 23:47:07'!
PASSED!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:47:07'!
PASSED!

!testRun: #InnerUserInterfaceTest #test12cannotlistPurchasesWithInvalidCredentials stamp: 'MS 6/23/2021 23:47:07'!
PASSED!
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/23/2021 23:47:29' prior: 50867787!
initializeWith: aCredentialValidator acceptingItemsOf: aCatalog throughtMP: aMerchantProcessor.

	credentialValidator := aCredentialValidator.
	catalog := aCatalog.
	merchantProcessor  := aMerchantProcessor.
	carts := Dictionary new.
	salesBooks := Dictionary new.
	lastCartId := 0.
	lastTransactionId := 0.! !
!InnerUserInterface methodsFor: 'initialization' stamp: 'MS 6/23/2021 23:47:59'!
generateTransactionID
	lastTransactionId := lastTransactionId + 1.
	
	^ lastTransactionId.! !
!InnerUserInterface methodsFor: 'checkout' stamp: 'MS 6/23/2021 23:48:12' prior: 50867567!
checkout: aCartID at: aTime withCard: aCardNumber from: aCardOwner expiringOn: aDate
	
	| creditCard salesBook userID cart cashier cartTime |
	
	creditCard := CreditCard number: aCardNumber from: aCardOwner expiringOn: aDate.
	
	self assertCartID: aCartID isValidAt: aTime.
	
	cartTime := self lastTimeUsedOf: aCartID.
	cartTime := aTime.
	cart := self cartOf: aCartID.
	userID := self UserIDOf: aCartID.
	
	salesBook := salesBooks at: userID ifAbsent: [salesBooks at: userID put: OrderedCollection new].
	
	cashier := Cashier toCheckout: cart charging: creditCard throught: merchantProcessor on: aTime registeringOn: salesBook.
	
	cashier checkOut.
	
	^ self generateTransactionID.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:48:27' prior: 50866717!
test02createdCartWithValidCredentialsIsEmpty

	| interface userID userPassword cartID catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self assert: (interface listCart: cartID at: time) isEmpty.! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:48:33' prior: 50864317!
test03addingAnItemInCartIsListed

	| interface userID userPassword cartID isbn catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	
	self assert: ((interface listCart: cartID at: time) size) equals: 1.
	self assert: (interface listCart: cartID at: time) includes: isbn.
	! !

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:48:34'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 23:48:34'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:48:34'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:48:34'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:48:34'!
ERROR!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:48:34'!
ERROR!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 23:48:34'!
ERROR!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 23:48:34'!
ERROR!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:48:34'!
ERROR!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:48:34'!
ERROR!

!testRun: #InnerUserInterfaceTest #test10listPurchasesOfUserWithNoSalesIsEmpty stamp: 'MS 6/23/2021 23:48:34'!
PASSED!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:48:34'!
PASSED!

!testRun: #InnerUserInterfaceTest #test12cannotlistPurchasesWithInvalidCredentials stamp: 'MS 6/23/2021 23:48:34'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:48:40'!
ERROR!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:48:43' prior: 50864345!
test04cannotAddItemsToInvalidCart

	| interface catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	
	self should: [interface add: 1 of: 'isbn' toCart: 1 at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:48:47' prior: 50864364!
test05cannotListItemsOfInvalidCart

	| interface catalog time |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	
	self should: [interface listCart: 1 at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:48:52' prior: 50864604!
test06cannotAddItemsToExpiredCart

	| interface catalog time cartID userID userPassword creationTime isbn |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	self should: [interface add: 1 of: isbn toCart: cartID at: time.]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:48:55' prior: 50864656!
test07cannotListItemsOfExpiredCart

	| interface catalog time cartID userID userPassword creationTime |

	catalog := testObjectsFactory defaultCatalog.
	creationTime := testObjectsFactory dateTimeToday.
	time := testObjectsFactory dateTimeTodayAfter30Minutes .
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: creationTime.
	
	self should: [interface listCart: cartID at: time]
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:48:59' prior: 50865289!
test08cannotCheckoutACartWithInvalidCard

	| interface catalog time cartID userID userPassword |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.

	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	self should: [interface checkout: cartID at: time withCard: 0 from: '' expiringOn: '']
	 raise: Error
	withMessageText: CreditCard invalidCreditCard.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:49:04' prior: 50865338!
test09cannotCheckoutAnInvalidCart

	| interface catalog time|

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	
	self should: [ interface checkout: 1 at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021']
	 raise: Error
	withMessageText: InnerUserInterface invalidCartId.! !

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10listPurchasesOfUserWithNoSalesIsEmpty stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test12cannotlistPurchasesWithInvalidCredentials stamp: 'MS 6/23/2021 23:49:05'!
PASSED!

!testRun: #InnerUserInterfaceTest #test12cannotlistPurchasesWithInvalidCredentials stamp: 'MS 6/23/2021 23:49:53'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10listPurchasesOfUserWithNoSalesIsEmpty stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test12cannotlistPurchasesWithInvalidCredentials stamp: 'MS 6/23/2021 23:49:58'!
PASSED!

!testRun: #InnerUserInterfaceTest #test01cannotCreateACartWithInvalidCredentials stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test02createdCartWithValidCredentialsIsEmpty stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test03addingAnItemInCartIsListed stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test04cannotAddItemsToInvalidCart stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test05cannotListItemsOfInvalidCart stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test06cannotAddItemsToExpiredCart stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test07cannotListItemsOfExpiredCart stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test08cannotCheckoutACartWithInvalidCard stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test09cannotCheckoutAnInvalidCart stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test10listPurchasesOfUserWithNoSalesIsEmpty stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:50:01'!
PASSED!

!testRun: #InnerUserInterfaceTest #test12cannotlistPurchasesWithInvalidCredentials stamp: 'MS 6/23/2021 23:50:01'!
PASSED!
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:53:57' prior: 50867669!
test11checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	expectedList := OrderedCollection with: (OrderedCollection with: isbn) with: testObjectsFactory itemSellByTheStorePrice.
	
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:54:11' prior: 50868277!
test11checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList transactionID |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	expectedList := OrderedCollection with: (OrderedCollection with: isbn) with: testObjectsFactory itemSellByTheStorePrice.
	transactionID := 1.
	
	interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021'.
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !
!InnerUserInterfaceTest methodsFor: 'testing' stamp: 'MS 6/23/2021 23:54:35' prior: 50868308!
test11checkoutACartIsListedInPurchases

	| interface catalog time cartID isbn userID userPassword expectedList transactionID |

	catalog := testObjectsFactory defaultCatalog.
	time := testObjectsFactory dateTimeToday.
	
	interface := InnerUserInterface with: credentialValidatorValid acceptingItemsOf: catalog throughtMP: self.
	userID := 'validUser'.
	userPassword := 'validPassword'.

	cartID := interface createCartForUser: userID withPassword: userPassword at: time.
	
	isbn := testObjectsFactory itemSellByTheStore.
	
	interface add: 1 of: isbn toCart: cartID at: time.
	expectedList := OrderedCollection with: (OrderedCollection with: isbn) with: testObjectsFactory itemSellByTheStorePrice.
	transactionID := 1.
	
	self assert: (interface checkout: cartID at: time withCard: 1234567812345678 from: 'donpepegrillo' expiringOn: '072021') equals: transactionID.
	self assert: (interface listPurchasesOf: userID withPassword: userPassword) equals: expectedList.
	! !

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:54:36'!
PASSED!

!testRun: #InnerUserInterfaceTest #test11checkoutACartIsListedInPurchases stamp: 'MS 6/23/2021 23:54:39'!
PASSED!

----QUIT----(23 June 2021 23:56:00) CuisUniversity-4532.image priorSource: 17105305!